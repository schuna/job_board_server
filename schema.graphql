type Query {
    users: [User!]!
    messages: [Message!]!
    products(filter: ProductFilterInput): [Product!]!
    categories: [Category!]!
    product(id: ID!): Product
    category(id: ID!): Category
}

input ProductFilterInput {
    onSale: Boolean
}

type Mutation {
    createUser(input: CreateUserInput!): User
    addMessage(input: MessageInput!): Message
}

type Subscription {
    userAdded: User
    messageAdded: Message
}

type User {
    id: ID!
    email: String!
    password: String!
}

type Message {
    id: ID!
    from: String!
    text: String!
}

type Product {
    id: ID!
    name: String!
    description: String!
    quantity: Int!
    price: Float!
    image: String!
    onSale: Boolean
    category: Category
    reviews: [Review!]!
}

type Category {
    id: ID!
    name: String!
    products(filter: ProductFilterInput): [Product!]!
}

type Review {
    id: ID!
    date: String!
    title: String!
    Comment: String!
    Rating: Int!
    productId: ID!
}

input CreateUserInput {
    email: String!,
    password: String!
}

input MessageInput {
    text: String!
}